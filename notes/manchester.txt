# Typical Schedule

Looking at [this etherpad](http://pad.software-carpentry.org/2015-11-23-Manchester-Instructor-Training):

## Day 1

1.  novice vs. competent / formative assessment => MCQ exercise
    -   think-pair-share: do it, swap with a partner, revise
    -   feedback on their MCQs was mostly about the difference between diagnosing faulty mental models vs. catching trivial misunderstandings of syntax

2.  recorded teaching demos in groups of 3: 30 seconds to introduce yourself, 90 seconds to talk about the coolest idea from your research or job
    -   one records, one is audience, one teaches, then rotate roles
    -   nobody gives feedback until everyone is finished teaching, then all watch videos together
    -   everyone gives feedback in the etherpad on everyone who was in their group (including themselves)
    -   then talk about why watching yourself on video is so horrible

3.  Coffee

4.  competent vs. expert / knowledge as a graph (expert's is more densely connected) => concept maps
    -   again, think-pair-share
    -   pulled three people up to draw theirs on the whiteboard
    -   subject is the same thing you taught in the morning (greatly reduced complaints about lack of warning)

5.  Lunch (overlapped with concept map exercise a bit if I recall correctly)

6.  Another round of recorded teaching (same topic, but skip the 30-second personal intro)
    -   they've drawn the concept map this time, so they've thought about the topic more
    -   they've got a 2x2 rubric for feedback (positive vs. negative, content vs. delivery)

7.  Cognitive load and faded examples
    -   rushed this a bit
    -   didn't work particularly well - people struggled to come up with an example
    -   next week, I'll assign this as overnight homework to give them time to think

8.  Coffee

9.  Reverse instructional design (they've now seen most of the pieces)
    -   told them about learning objectives, but didn't actually get them to write any
    -   might (but only might) ask them to do this overnight next week
    -   instead, had them do the Teaching Perspectives Inventory (http://www.teachingperspectives.com/tpi/)
    -   mistake to get them to do this in class (took too long, lost momentum) - again, it's an overnight kind of thing

10. Homework: read the operations guide

## Day 2

1.  Put questions about operations guide (and other things) into the Etherpad and we'll answer them
    -   worked really well

2.  Live coding demo, followed by pairing up and teaching the pipe lesson to each other via live coding
    -   only a handful recorded, and those who did said it wasn't worth it (where do you point the camera?)
    -   some complaints about teaching something they'd only just seen, but only a few

3.  Coffee

4.  Motivation/demotivation
    -   Aleksandra talked about her personal experiences
    -   got everyone to put their demotivational story and what could have been done afterward into the etherpad

5.  Lunch

6.  Setting up a workshop website
    -   20/24 participants were comfortable with Git/GitHub, so we did this
    -   took about 30 minutes to get all but one pair through

7.  Assessment: had them work through our existing pre-workshop assessment
    -   some stumbles getting it set up, and took too long - wouldn't do this in class again
    -   but nice lead-in to having them think in groups of 4 about how to assess long-term impact
    -   then present ideas to Carole Goble, who shot them down one by one :-)

8.  Coffee (lots of discussion)

9.  Wrap up: what are the final steps to qualify?
